{"ast":null,"code":"import * as Panelbear from \"@panelbear/panelbear-js\";\nimport { useRouter } from \"next/router\";\nimport { useEffect } from \"react\";\nexport const usePanelbear = (site, config = {}) => {\n  const router = useRouter();\n  useEffect(() => {\n    Panelbear.load(site, config); // Trigger initial page view\n\n    Panelbear.trackPageview(); // Add on route change handler for client-side navigation\n\n    const handleRouteChange = () => Panelbear.trackPageview();\n\n    router.events.on(\"routeChangeComplete\", handleRouteChange);\n    return () => {\n      router.events.off(\"routeChangeComplete\", handleRouteChange);\n    };\n  }, []);\n};","map":{"version":3,"sources":["/Users/yaosamo/yaosamo.github.io/nextjs-blog/hooks/panelbear.js"],"names":["Panelbear","useRouter","useEffect","usePanelbear","site","config","router","load","trackPageview","handleRouteChange","events","on","off"],"mappings":"AAAA,OAAO,KAAKA,SAAZ,MAA2B,yBAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,IAAD,EAAOC,MAAM,GAAG,EAAhB,KAAuB;AACjD,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdF,IAAAA,SAAS,CAACO,IAAV,CAAeH,IAAf,EAAqBC,MAArB,EADc,CAGd;;AACAL,IAAAA,SAAS,CAACQ,aAAV,GAJc,CAMd;;AACA,UAAMC,iBAAiB,GAAG,MAAMT,SAAS,CAACQ,aAAV,EAAhC;;AACAF,IAAAA,MAAM,CAACI,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwCF,iBAAxC;AAEA,WAAO,MAAM;AACXH,MAAAA,MAAM,CAACI,MAAP,CAAcE,GAAd,CAAkB,qBAAlB,EAAyCH,iBAAzC;AACD,KAFD;AAGD,GAbQ,EAaN,EAbM,CAAT;AAcD,CAjBM","sourcesContent":["import * as Panelbear from \"@panelbear/panelbear-js\";\nimport { useRouter } from \"next/router\";\nimport { useEffect } from \"react\";\n\nexport const usePanelbear = (site, config = {}) => {\n  const router = useRouter();\n\n  useEffect(() => {\n    Panelbear.load(site, config);\n\n    // Trigger initial page view\n    Panelbear.trackPageview();\n\n    // Add on route change handler for client-side navigation\n    const handleRouteChange = () => Panelbear.trackPageview();\n    router.events.on(\"routeChangeComplete\", handleRouteChange);\n\n    return () => {\n      router.events.off(\"routeChangeComplete\", handleRouteChange);\n    };\n  }, []);\n};\n"]},"metadata":{},"sourceType":"module"}